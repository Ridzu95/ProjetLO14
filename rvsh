#!/bin/bash

function checkParameters {
  if [[ $1 -eq 3 ]]; then
    if [[ $2 == '-connect' ]]; then
      virtuChecked=0
      if [[ $3 == $(grep -o $3 virtu.txt) ]];then
        virtuChecked=1
        echo "Machine $3 identifiée"
        if [[ $4 == $(awk -F: '{print $1}' users.txt | grep -o $4) ]]; then
          echo "Utilisateur $4 identifié"
          if [[ $3 == $(grep $4 users.txt | grep -o $3) ]];then
            echo "L'utilisateur $4 a bien accès à la machine $3."
            parametersOk=1
          else
            echo "L'utilisateur $4 n'a pas accès à la machine $3."
          fi
        else
          echo "Utilisateur non identifié"
        fi
      else
        echo "Machine $3 non identifiée"
      fi
    fi
  elif [[ $1 -eq 1 && $2 ==  '-admin' ]]; then
    enteredPassword=0
    password=$(cat admin.txt)
    read -s -p "Password for rvsh admin : " enteredPassword
    if [[ $(echo $enteredPassword | sha512sum | cut -d' ' -f1) == $password ]]; then
      echo "Mot de passe valide"
      parametersOk=1
    else
      echo "Mot de passe érroné"
    fi
  elif [[ $1 -eq 1 && $2 == 'help' ]]; then
    echo "
    Deux utilisations :

    Mode connect : vous permet de vous connecter à une machine du réseau virtuel --> rvsh -connect [machine] [utilisateur]
    Mode admin : vous permet d'éditer la configuration du réseau virtuel --> rvsh -admin
    "
    
  else
    echo "Mauvaise utilisation de la commande. Tapez 'rvsh help' pour plus d'informations"
  fi
}

function createMachineLog {
  if [[ ! -f $1 ]]; then
    touch $1.txt
  fi
  currentTerminal=$(tty)
  timeLog=$(date | cut -d' ' -f-4)
  echo "$2,$currentTerminal,$timeLog" >> $1.txt
}

function deleteMachineLog {
  sed -e 's;$1,$currentTerminal,.*$;;g' $1.txt
}

function adminPrompt {
  read -p "rvsh > " userInput
  case $userInput in

  esac
}

function connectPrompt {
  trap "" 2
  trap "" 20
  read -p "$2@$1 > " userInput 
  case $userInput in
    "") connectPrompt $1 $2 ;;
    "who") whoCommand $1 $2 ;;
    "disconnect") disconnectCommand $1 $2;;
    *) helpCommand $1 $2 ;;
  esac
}

function whoCommand {
  echo "Utilisateurs connectés sur la machine $1 :"
  awk -F, '{print $1," is connected from ",$2," since ",$3}' $1.txt
  connectPrompt $1 $2
}

function helpCommand {
  echo "
  Commandes à votre disposition sur cette machine :
  
  who : Cette commande permet d’accéder à l’ensemble des utilisateurs connectés sur la machine.
  rusers : Cette commande permet d’accéder à la liste des utilisateurs connectés sur le réseau.
  rhost : Cette commande doit renvoyer la liste des machines rattachées à la machine. 
  ...
  "
  connectPrompt $1 $2
}

function disconnectCommand {
  echo "Déconnexion de la machine"
  deleteMachineLog $1 $2
  clear
}

function rvsh {
  checkParameters $# $1 $2 $3
  if [[ $parametersOk == 1 ]]; then
    clear
    if [[ $1 == "-admin" ]]; then
      adminPrompt
    else
      createMachineLog $2 $3
      connectPrompt $2 $3
    fi
  fi
}

rvsh $@
exit 0